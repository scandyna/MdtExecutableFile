
include:
  - local: 'ci_cd/GitLab/Common.yml'


.setup_conan:
  script:
    - conan remote remove conancenter
    - conan remote add scandyna https://gitlab.com/api/v4/projects/25668674/packages/conan
    - conan config install --source-folder conan https://gitlab.com/scandyna/conan-config.git


.conan_createAndTest_rules:
  rules:
    - changes:
      - .gitlab-ci.yml
      - ci_cd/GitLab/*
      - CMakeLists.txt
      - conanfile.py
      - apps/**/*
      - libs/**/*
      - packaging/conan/**/*
      when: on_success


.conan_createAndTest:
  stage: build
  rules:
    - !reference [.conan_createAndTest_rules, rules]
  script:
    - !reference [.setup_conan, script]
    - conan create packaging/conan/$COMPONENT 0.0.0@scandyna/testing
      --profile:build $CONAN_PROFILE_BUILD --profile:host $CONAN_PROFILE_HOST
      --settings:build build_type=Release --settings:host build_type=$BUILD_TYPE
      --test-folder None
    - conan test packaging/conan/$COMPONENT/test_package $COMPONENT/0.0.0@scandyna/testing
      --profile:build $CONAN_PROFILE_BUILD --profile:host $CONAN_PROFILE_HOST
      --settings:build build_type=Release --settings:host build_type=$BUILD_TYPE


.deploy_conan:
  stage: deploy
  retry: 1
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never
  script:
    - !reference [.setup_conan, script]
    - conan create packaging/conan/$COMPONENT scandyna/testing
      --profile:build $CONAN_PROFILE_BUILD --profile:host $CONAN_PROFILE_HOST
      --settings:build build_type=Release --settings:host build_type=$BUILD_TYPE
    - conan user --password "${CI_JOB_TOKEN}" --remote scandyna ci_user
    - conan upload $COMPONENT/* --remote scandyna --all -c
  # Avoid getting artifacts from previous stages
  dependencies: []
